version: '2.12.1'
services:
  backend:
    build: 
      context: ../../../IndividualTrack/individualtrack_mariela_gocheva/Individual
      dockerfile: Dockerfile
    restart: always
    # secrets:
    #   - db-password
    ports:
      - "8080:8080"
    environment:
      MYSQL_HOST: db
    networks:
      - spring-cloud-network
      # - react-spring
      # - spring-mysql
    #   - my-network
    depends_on:
      - db
        # condition: service_healthy
  db:
    image: mariadb:latest
    ports:
      - "3307:3306"
    environment:
      - MYSQL_DATABASE=testdatabase
      - MYSQL_USER=root
      - MYSQL_PASSWORD=0105
    restart: always
    # healthcheck:
    #   test: ["CMD", "mysqladmin", "ping", "-h", "127.0.0.1", "--silent"]
    #   interval: 3s
    #   retries: 5
    #   start_period: 30s
    # secrets:
    #   - db-password
    volumes:
      - db-data:/var/lib/mysql
    networks:
      - spring-cloud-network
    #   - spring-mysql
    #   - my-network
  frontend:
    build:
      context: frontend
      target: development
    ports:
      - 3000:3000
    volumes:
      - ./frontend/src:/code/src
      - /project/node_modules
    networks:
      - spring-cloud-network
    # - spring-mysql
      # - react-spring
    #   - my-network
    depends_on:
      - backend
    expose:
      - 3306
      - 33060
volumes:
  db-data: {}
# secrets:
#   db-password:
#     file: db/password.txt
networks:
  spring-cloud-network:
    driver: bridge
  # my-network:
  #   name: my-network
  # react-spring: {}
  # spring-mysql: {}